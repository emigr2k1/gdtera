<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="550" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="533.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="533.00"> </text><svg id="frames" x="10" width="1180"><g><title>HIToolbox`FlushAllBuffers(__CFRunLoopObserver*, unsigned long, void*) (68 samples, 0.14%)</title><rect x="0.2039%" y="293" width="0.1429%" height="15" fill="rgb(227,0,7)"/><text x="0.4539%" y="303.50"></text></g><g><title>HIToolbox`FlushWindowObject(WindowData*, void**, unsigned char) (63 samples, 0.13%)</title><rect x="0.2144%" y="277" width="0.1324%" height="15" fill="rgb(217,0,24)"/><text x="0.4644%" y="287.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetServerBounds (62 samples, 0.13%)</title><rect x="0.2165%" y="261" width="0.1303%" height="15" fill="rgb(221,193,54)"/><text x="0.4665%" y="271.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (80 samples, 0.17%)</title><rect x="0.2018%" y="309" width="0.1682%" height="15" fill="rgb(248,212,6)"/><text x="0.4518%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (82 samples, 0.17%)</title><rect x="0.1997%" y="325" width="0.1724%" height="15" fill="rgb(208,68,35)"/><text x="0.4497%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (79 samples, 0.17%)</title><rect x="0.3868%" y="325" width="0.1661%" height="15" fill="rgb(232,128,0)"/><text x="0.6368%" y="335.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (175 samples, 0.37%)</title><rect x="0.1934%" y="341" width="0.3679%" height="15" fill="rgb(207,160,47)"/><text x="0.4434%" y="351.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (218 samples, 0.46%)</title><rect x="0.1871%" y="357" width="0.4583%" height="15" fill="rgb(228,23,34)"/><text x="0.4371%" y="367.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (230 samples, 0.48%)</title><rect x="0.1661%" y="389" width="0.4835%" height="15" fill="rgb(218,30,26)"/><text x="0.4161%" y="399.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (230 samples, 0.48%)</title><rect x="0.1661%" y="373" width="0.4835%" height="15" fill="rgb(220,122,19)"/><text x="0.4161%" y="383.50"></text></g><g><title>AppKit`_DPSNextEvent (243 samples, 0.51%)</title><rect x="0.1429%" y="405" width="0.5108%" height="15" fill="rgb(250,228,42)"/><text x="0.3929%" y="415.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (344 samples, 0.72%)</title><rect x="0.0610%" y="421" width="0.7231%" height="15" fill="rgb(240,193,28)"/><text x="0.3110%" y="431.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (114 samples, 0.24%)</title><rect x="0.8114%" y="405" width="0.2396%" height="15" fill="rgb(216,20,37)"/><text x="1.0614%" y="415.50"></text></g><g><title>Godot`-[GodotApplication sendEvent:] (118 samples, 0.25%)</title><rect x="0.8114%" y="421" width="0.2481%" height="15" fill="rgb(206,188,39)"/><text x="1.0614%" y="431.50"></text></g><g><title>Godot`Viewport::_vp_input(Ref (66 samples, 0.14%)</title><rect x="1.1436%" y="309" width="0.1387%" height="15" fill="rgb(217,207,13)"/><text x="1.3936%" y="319.50"></text></g><g><title>Godot`Viewport::input(Ref (58 samples, 0.12%)</title><rect x="1.1604%" y="293" width="0.1219%" height="15" fill="rgb(231,73,38)"/><text x="1.4104%" y="303.50"></text></g><g><title>Godot`SceneTree::call_group_flags (98 samples, 0.21%)</title><rect x="1.1372%" y="373" width="0.2060%" height="15" fill="rgb(225,20,46)"/><text x="1.3872%" y="383.50"></text></g><g><title>Godot`Object::call (98 samples, 0.21%)</title><rect x="1.1372%" y="357" width="0.2060%" height="15" fill="rgb(210,31,41)"/><text x="1.3872%" y="367.50"></text></g><g><title>Godot`Object::call (98 samples, 0.21%)</title><rect x="1.1372%" y="341" width="0.2060%" height="15" fill="rgb(221,200,47)"/><text x="1.3872%" y="351.50"></text></g><g><title>Godot`MethodBind1&lt;Ref&lt;InputEvent&gt; const&amp;&gt;::call (95 samples, 0.20%)</title><rect x="1.1436%" y="325" width="0.1997%" height="15" fill="rgb(226,26,5)"/><text x="1.3936%" y="335.50"></text></g><g><title>Godot`SceneTree::input_event(Ref (100 samples, 0.21%)</title><rect x="1.1351%" y="389" width="0.2102%" height="15" fill="rgb(249,33,26)"/><text x="1.3851%" y="399.50"></text></g><g><title>Godot`InputDefault::_parse_input_event_impl(Ref (109 samples, 0.23%)</title><rect x="1.1183%" y="405" width="0.2291%" height="15" fill="rgb(235,183,28)"/><text x="1.3683%" y="415.50"></text></g><g><title>Godot`InputDefault::flush_accumulated_events (113 samples, 0.24%)</title><rect x="1.1183%" y="421" width="0.2375%" height="15" fill="rgb(221,5,38)"/><text x="1.3683%" y="431.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (55 samples, 0.12%)</title><rect x="5.3289%" y="37" width="0.1156%" height="15" fill="rgb(247,18,42)"/><text x="5.5789%" y="47.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (71 samples, 0.15%)</title><rect x="5.3184%" y="53" width="0.1493%" height="15" fill="rgb(241,131,45)"/><text x="5.5684%" y="63.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (90 samples, 0.19%)</title><rect x="5.3037%" y="69" width="0.1892%" height="15" fill="rgb(249,31,29)"/><text x="5.5537%" y="79.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (110 samples, 0.23%)</title><rect x="5.2847%" y="85" width="0.2312%" height="15" fill="rgb(225,111,53)"/><text x="5.5347%" y="95.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (150 samples, 0.32%)</title><rect x="5.2553%" y="101" width="0.3153%" height="15" fill="rgb(238,160,17)"/><text x="5.5053%" y="111.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (173 samples, 0.36%)</title><rect x="5.2217%" y="117" width="0.3637%" height="15" fill="rgb(214,148,48)"/><text x="5.4717%" y="127.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (224 samples, 0.47%)</title><rect x="5.1649%" y="133" width="0.4709%" height="15" fill="rgb(232,36,49)"/><text x="5.4149%" y="143.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (316 samples, 0.66%)</title><rect x="5.0598%" y="149" width="0.6643%" height="15" fill="rgb(209,103,24)"/><text x="5.3098%" y="159.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (465 samples, 0.98%)</title><rect x="4.8979%" y="165" width="0.9775%" height="15" fill="rgb(229,88,8)"/><text x="5.1479%" y="175.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (56 samples, 0.12%)</title><rect x="5.8754%" y="165" width="0.1177%" height="15" fill="rgb(213,181,19)"/><text x="6.1254%" y="175.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::findShallowExportedSymbol (56 samples, 0.12%)</title><rect x="5.8754%" y="149" width="0.1177%" height="15" fill="rgb(254,191,54)"/><text x="6.1254%" y="159.50"></text></g><g><title>dyld`ImageLoaderMachO::libPath (66 samples, 0.14%)</title><rect x="5.9931%" y="165" width="0.1387%" height="15" fill="rgb(241,83,37)"/><text x="6.2431%" y="175.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (751 samples, 1.58%)</title><rect x="4.5679%" y="181" width="1.5787%" height="15" fill="rgb(233,36,39)"/><text x="4.8179%" y="191.50"></text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (65 samples, 0.14%)</title><rect x="6.1466%" y="181" width="0.1366%" height="15" fill="rgb(226,3,54)"/><text x="6.3966%" y="191.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::findShallowExportedSymbol (63 samples, 0.13%)</title><rect x="6.1508%" y="165" width="0.1324%" height="15" fill="rgb(245,192,40)"/><text x="6.4008%" y="175.50"></text></g><g><title>dyld`ImageLoader::trieWalk (50 samples, 0.11%)</title><rect x="6.1781%" y="149" width="0.1051%" height="15" fill="rgb(238,167,29)"/><text x="6.4281%" y="159.50"></text></g><g><title>dyld`ImageLoaderMachO::libPath (52 samples, 0.11%)</title><rect x="6.2832%" y="181" width="0.1093%" height="15" fill="rgb(232,182,51)"/><text x="6.5332%" y="191.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (1,135 samples, 2.39%)</title><rect x="4.0466%" y="197" width="2.3859%" height="15" fill="rgb(231,60,39)"/><text x="4.2966%" y="207.50">dy..</text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (158 samples, 0.33%)</title><rect x="6.4325%" y="197" width="0.3321%" height="15" fill="rgb(208,69,12)"/><text x="6.6825%" y="207.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::findShallowExportedSymbol (154 samples, 0.32%)</title><rect x="6.4409%" y="181" width="0.3237%" height="15" fill="rgb(235,93,37)"/><text x="6.6909%" y="191.50"></text></g><g><title>dyld`ImageLoader::trieWalk (121 samples, 0.25%)</title><rect x="6.5103%" y="165" width="0.2544%" height="15" fill="rgb(213,116,39)"/><text x="6.7603%" y="175.50"></text></g><g><title>dyld`ImageLoaderMachO::libPath (63 samples, 0.13%)</title><rect x="6.7646%" y="197" width="0.1324%" height="15" fill="rgb(222,207,29)"/><text x="7.0146%" y="207.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (1,598 samples, 3.36%)</title><rect x="3.5820%" y="213" width="3.3592%" height="15" fill="rgb(206,96,30)"/><text x="3.8320%" y="223.50">dyl..</text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (164 samples, 0.34%)</title><rect x="6.9412%" y="213" width="0.3447%" height="15" fill="rgb(218,138,4)"/><text x="7.1912%" y="223.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::findShallowExportedSymbol (160 samples, 0.34%)</title><rect x="6.9496%" y="197" width="0.3363%" height="15" fill="rgb(250,191,14)"/><text x="7.1996%" y="207.50"></text></g><g><title>dyld`ImageLoader::trieWalk (117 samples, 0.25%)</title><rect x="7.0400%" y="181" width="0.2459%" height="15" fill="rgb(239,60,40)"/><text x="7.2900%" y="191.50"></text></g><g><title>dyld`ImageLoaderMachO::libPath (51 samples, 0.11%)</title><rect x="7.2860%" y="213" width="0.1072%" height="15" fill="rgb(206,27,48)"/><text x="7.5360%" y="223.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (2,022 samples, 4.25%)</title><rect x="3.1763%" y="229" width="4.2505%" height="15" fill="rgb(225,35,8)"/><text x="3.4263%" y="239.50">dyld`..</text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (60 samples, 0.13%)</title><rect x="7.4268%" y="229" width="0.1261%" height="15" fill="rgb(250,213,24)"/><text x="7.6768%" y="239.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::findShallowExportedSymbol (60 samples, 0.13%)</title><rect x="7.4268%" y="213" width="0.1261%" height="15" fill="rgb(247,123,22)"/><text x="7.6768%" y="223.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (2,216 samples, 4.66%)</title><rect x="2.9703%" y="245" width="4.6583%" height="15" fill="rgb(231,138,38)"/><text x="3.2203%" y="255.50">dyld`..</text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (2,513 samples, 5.28%)</title><rect x="2.5267%" y="261" width="5.2826%" height="15" fill="rgb(231,145,46)"/><text x="2.7767%" y="271.50">dyld`I..</text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (2,807 samples, 5.90%)</title><rect x="2.0748%" y="277" width="5.9007%" height="15" fill="rgb(251,118,11)"/><text x="2.3248%" y="287.50">dyld`Ima..</text></g><g><title>dyld`ImageLoaderMachO::findExportedSymbol (71 samples, 0.15%)</title><rect x="7.9754%" y="277" width="0.1493%" height="15" fill="rgb(217,147,25)"/><text x="8.2254%" y="287.50"></text></g><g><title>dyld`ImageLoaderMachOCompressed::findShallowExportedSymbol (69 samples, 0.15%)</title><rect x="7.9797%" y="261" width="0.1450%" height="15" fill="rgb(247,81,37)"/><text x="8.2297%" y="271.50"></text></g><g><title>dyld`ImageLoader::trieWalk (49 samples, 0.10%)</title><rect x="8.0217%" y="245" width="0.1030%" height="15" fill="rgb(209,12,38)"/><text x="8.2717%" y="255.50"></text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (3,062 samples, 6.44%)</title><rect x="1.7553%" y="293" width="6.4367%" height="15" fill="rgb(227,1,9)"/><text x="2.0053%" y="303.50">dyld`Ima..</text></g><g><title>dyld`ImageLoader::findExportedSymbolInDependentImagesExcept (3,123 samples, 6.56%)</title><rect x="1.7090%" y="309" width="6.5649%" height="15" fill="rgb(248,47,43)"/><text x="1.9590%" y="319.50">dyld`Imag..</text></g><g><title>dyld`ImageLoader::findExportedSymbolInImageOrDependentImages (3,129 samples, 6.58%)</title><rect x="1.7069%" y="325" width="6.5775%" height="15" fill="rgb(221,10,30)"/><text x="1.9569%" y="335.50">dyld`Imag..</text></g><g><title>dyld`_kernelrpc_mach_vm_deallocate_trap (356 samples, 0.75%)</title><rect x="8.3433%" y="309" width="0.7484%" height="15" fill="rgb(210,229,1)"/><text x="8.5933%" y="319.50"></text></g><g><title>dyld`_kernelrpc_mach_vm_allocate_trap (257 samples, 0.54%)</title><rect x="9.7686%" y="277" width="0.5402%" height="15" fill="rgb(222,148,37)"/><text x="10.0186%" y="287.50"></text></g><g><title>dyld`_simple_salloc (583 samples, 1.23%)</title><rect x="9.0917%" y="309" width="1.2255%" height="15" fill="rgb(234,67,33)"/><text x="9.3417%" y="319.50"></text></g><g><title>dyld`vm_allocate (262 samples, 0.55%)</title><rect x="9.7665%" y="293" width="0.5508%" height="15" fill="rgb(247,98,35)"/><text x="10.0165%" y="303.50"></text></g><g><title>dyld`__simple_bprintf (61 samples, 0.13%)</title><rect x="10.3193%" y="293" width="0.1282%" height="15" fill="rgb(247,138,52)"/><text x="10.5693%" y="303.50"></text></g><g><title>dyld`_simple_vsprintf (62 samples, 0.13%)</title><rect x="10.3193%" y="309" width="0.1303%" height="15" fill="rgb(213,79,30)"/><text x="10.5693%" y="319.50"></text></g><g><title>dyld`dyld::mkstringf (1,057 samples, 2.22%)</title><rect x="8.3307%" y="325" width="2.2219%" height="15" fill="rgb(246,177,23)"/><text x="8.5807%" y="335.50">d..</text></g><g><title>dyld`dlsym_internal (4,246 samples, 8.93%)</title><rect x="1.6943%" y="341" width="8.9256%" height="15" fill="rgb(230,62,27)"/><text x="1.9443%" y="351.50">dyld`dlsym_in..</text></g><g><title>libdyld.dylib`dlsym (4,268 samples, 8.97%)</title><rect x="1.6817%" y="357" width="8.9719%" height="15" fill="rgb(216,154,8)"/><text x="1.9317%" y="367.50">libdyld.dylib..</text></g><g><title>Godot`OS_Unix::get_dynamic_library_symbol_handle (4,311 samples, 9.06%)</title><rect x="1.6165%" y="373" width="9.0622%" height="15" fill="rgb(244,35,45)"/><text x="1.8665%" y="383.50">Godot`OS_Unix..</text></g><g><title>Godot`GDNative::get_symbol (4,332 samples, 9.11%)</title><rect x="1.5913%" y="389" width="9.1064%" height="15" fill="rgb(251,115,12)"/><text x="1.8413%" y="399.50">Godot`GDNativ..</text></g><g><title>Godot`NativeScriptLanguage::call_libraries_cb (4,420 samples, 9.29%)</title><rect x="1.5451%" y="405" width="9.2914%" height="15" fill="rgb(240,54,50)"/><text x="1.7951%" y="415.50">Godot`NativeS..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (364 samples, 0.77%)</title><rect x="10.9037%" y="357" width="0.7652%" height="15" fill="rgb(233,84,52)"/><text x="11.1537%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (369 samples, 0.78%)</title><rect x="10.8953%" y="373" width="0.7757%" height="15" fill="rgb(207,117,47)"/><text x="11.1453%" y="383.50"></text></g><g><title>libsystem_c.dylib`nanosleep (395 samples, 0.83%)</title><rect x="10.8533%" y="389" width="0.8303%" height="15" fill="rgb(249,43,39)"/><text x="11.1033%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (255 samples, 0.54%)</title><rect x="11.6836%" y="389" width="0.5360%" height="15" fill="rgb(209,38,44)"/><text x="11.9336%" y="399.50"></text></g><g><title>Godot`OS_Unix::delay_usec (677 samples, 1.42%)</title><rect x="10.8427%" y="405" width="1.4231%" height="15" fill="rgb(236,212,23)"/><text x="11.0927%" y="415.50"></text></g><g><title>libgdterm.dylib`gdnative_bindings::Image_set_pixel (124 samples, 0.26%)</title><rect x="12.3331%" y="213" width="0.2607%" height="15" fill="rgb(242,79,21)"/><text x="12.5831%" y="223.50"></text></g><g><title>libgdterm.dylib`gdnative_core::color::Color::rgba (183 samples, 0.38%)</title><rect x="12.5938%" y="213" width="0.3847%" height="15" fill="rgb(211,96,35)"/><text x="12.8438%" y="223.50"></text></g><g><title>Godot`godot_method_bind_ptrcall (133 samples, 0.28%)</title><rect x="21.5762%" y="197" width="0.2796%" height="15" fill="rgb(253,215,40)"/><text x="21.8262%" y="207.50"></text></g><g><title>Godot`VisualServerRaster::free (62 samples, 0.13%)</title><rect x="21.8558%" y="165" width="0.1303%" height="15" fill="rgb(211,81,21)"/><text x="22.1058%" y="175.50"></text></g><g><title>Godot`RasterizerStorageGLES3::free (61 samples, 0.13%)</title><rect x="21.8579%" y="149" width="0.1282%" height="15" fill="rgb(208,190,38)"/><text x="22.1079%" y="159.50"></text></g><g><title>Godot`RasterizerStorageGLES3::Texture::~Texture (57 samples, 0.12%)</title><rect x="21.8663%" y="133" width="0.1198%" height="15" fill="rgb(235,213,38)"/><text x="22.1163%" y="143.50"></text></g><g><title>Godot`godot_object_destroy (63 samples, 0.13%)</title><rect x="21.8558%" y="197" width="0.1324%" height="15" fill="rgb(237,122,38)"/><text x="22.1058%" y="207.50"></text></g><g><title>Godot`ImageTexture::~ImageTexture (63 samples, 0.13%)</title><rect x="21.8558%" y="181" width="0.1324%" height="15" fill="rgb(244,218,35)"/><text x="22.1058%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (79 samples, 0.17%)</title><rect x="22.0344%" y="181" width="0.1661%" height="15" fill="rgb(240,68,47)"/><text x="22.2844%" y="191.50"></text></g><g><title>libgdterm.dylib`core::ptr::drop_in_place (80 samples, 0.17%)</title><rect x="22.0344%" y="197" width="0.1682%" height="15" fill="rgb(210,16,53)"/><text x="22.2844%" y="207.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`glrWriteTextureData (370 samples, 0.78%)</title><rect x="22.2993%" y="101" width="0.7778%" height="15" fill="rgb(235,124,12)"/><text x="22.5493%" y="111.50"></text></g><g><title>libGLImage.dylib`glgProcessPixelsWithProcessor (370 samples, 0.78%)</title><rect x="22.2993%" y="85" width="0.7778%" height="15" fill="rgb(224,169,11)"/><text x="22.5493%" y="95.50"></text></g><g><title>libGLImage.dylib`void glgConvertTo_32&lt;GLGConverter_ABGR8_ARGB8, (GLGMemory)1&gt;(GLGOperationRec const*, GLDPixelModeRec const*) (367 samples, 0.77%)</title><rect x="22.3056%" y="69" width="0.7715%" height="15" fill="rgb(250,166,2)"/><text x="22.5556%" y="79.50"></text></g><g><title>Godot`RasterizerStorageGLES3::texture_set_data(RID, Ref (433 samples, 0.91%)</title><rect x="22.2678%" y="149" width="0.9102%" height="15" fill="rgb(242,216,29)"/><text x="22.5178%" y="159.50"></text></g><g><title>libGL.dylib`glTexImage2D (418 samples, 0.88%)</title><rect x="22.2993%" y="133" width="0.8787%" height="15" fill="rgb(230,116,27)"/><text x="22.5493%" y="143.50"></text></g><g><title>GLEngine`glTexImage2D_Exec (418 samples, 0.88%)</title><rect x="22.2993%" y="117" width="0.8787%" height="15" fill="rgb(228,99,48)"/><text x="22.5493%" y="127.50"></text></g><g><title>Godot`ImageTexture::create_from_image(Ref (442 samples, 0.93%)</title><rect x="22.2657%" y="165" width="0.9291%" height="15" fill="rgb(253,11,6)"/><text x="22.5157%" y="175.50"></text></g><g><title>libgdterm.dylib`gdnative_bindings::ImageTexture_create_from_image (443 samples, 0.93%)</title><rect x="22.2657%" y="197" width="0.9312%" height="15" fill="rgb(247,143,39)"/><text x="22.5157%" y="207.50"></text></g><g><title>Godot`MethodBind2&lt;Ref&lt;Image&gt; const&amp;, unsigned int&gt;::ptrcall (443 samples, 0.93%)</title><rect x="22.2657%" y="181" width="0.9312%" height="15" fill="rgb(236,97,10)"/><text x="22.5157%" y="191.50"></text></g><g><title>libgdterm.dylib`gdnative_bindings::Image_create (97 samples, 0.20%)</title><rect x="23.1969%" y="197" width="0.2039%" height="15" fill="rgb(233,208,19)"/><text x="23.4469%" y="207.50"></text></g><g><title>Godot`Image::create (97 samples, 0.20%)</title><rect x="23.1969%" y="181" width="0.2039%" height="15" fill="rgb(216,164,2)"/><text x="23.4469%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (96 samples, 0.20%)</title><rect x="23.1990%" y="165" width="0.2018%" height="15" fill="rgb(220,129,5)"/><text x="23.4490%" y="175.50"></text></g><g><title>Godot`Image::set_pixel (106 samples, 0.22%)</title><rect x="25.2234%" y="181" width="0.2228%" height="15" fill="rgb(242,17,10)"/><text x="25.4734%" y="191.50"></text></g><g><title>Godot`MethodBind3&lt;int, int, Color const&amp;&gt;::ptrcall (4,095 samples, 8.61%)</title><rect x="25.4462%" y="181" width="8.6082%" height="15" fill="rgb(242,107,0)"/><text x="25.6962%" y="191.50">Godot`Method..</text></g><g><title>Godot`Image::set_pixel (2,935 samples, 6.17%)</title><rect x="27.8846%" y="165" width="6.1697%" height="15" fill="rgb(251,28,31)"/><text x="28.1346%" y="175.50">Godot`Im..</text></g><g><title>libgdterm.dylib`gdnative_bindings::Image_set_pixel (5,197 samples, 10.92%)</title><rect x="23.4008%" y="197" width="10.9247%" height="15" fill="rgb(233,223,10)"/><text x="23.6508%" y="207.50">libgdterm.dylib`..</text></g><g><title>Godot`godot_method_bind_ptrcall (129 samples, 0.27%)</title><rect x="34.0544%" y="181" width="0.2712%" height="15" fill="rgb(215,21,27)"/><text x="34.3044%" y="191.50"></text></g><g><title>libgdterm.dylib`gdnative_core::color::Color::rgba (93 samples, 0.20%)</title><rect x="34.3255%" y="197" width="0.1955%" height="15" fill="rgb(232,23,21)"/><text x="34.5755%" y="207.50"></text></g><g><title>libgdterm.dylib`raqote::draw_target::blend_row (13,430 samples, 28.23%)</title><rect x="34.9351%" y="165" width="28.2315%" height="15" fill="rgb(244,5,23)"/><text x="35.1851%" y="175.50">libgdterm.dylib`raqote::draw_target::blend_row</text></g><g><title>libgdterm.dylib`sw_composite::over (9,059 samples, 19.04%)</title><rect x="44.1235%" y="149" width="19.0431%" height="15" fill="rgb(226,81,46)"/><text x="44.3735%" y="159.50">libgdterm.dylib`sw_composite::..</text></g><g><title>libgdterm.dylib`sw_composite::over (2,284 samples, 4.80%)</title><rect x="63.1666%" y="165" width="4.8012%" height="15" fill="rgb(247,70,30)"/><text x="63.4166%" y="175.50">libgdt..</text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (99 samples, 0.21%)</title><rect x="68.0078%" y="117" width="0.2081%" height="15" fill="rgb(212,68,19)"/><text x="68.2578%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (113 samples, 0.24%)</title><rect x="67.9868%" y="149" width="0.2375%" height="15" fill="rgb(240,187,13)"/><text x="68.2368%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (105 samples, 0.22%)</title><rect x="68.0036%" y="133" width="0.2207%" height="15" fill="rgb(223,113,26)"/><text x="68.2536%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`calloc (130 samples, 0.27%)</title><rect x="67.9679%" y="165" width="0.2733%" height="15" fill="rgb(206,192,2)"/><text x="68.2179%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (82 samples, 0.17%)</title><rect x="68.2517%" y="165" width="0.1724%" height="15" fill="rgb(241,108,4)"/><text x="68.5017%" y="175.50"></text></g><g><title>libgdterm.dylib`raqote::draw_target::DrawTarget::composite (16,115 samples, 33.88%)</title><rect x="34.6388%" y="181" width="33.8757%" height="15" fill="rgb(247,173,49)"/><text x="34.8888%" y="191.50">libgdterm.dylib`raqote::draw_target::DrawTarget::compos..</text></g><g><title>libgdterm.dylib`raqote::draw_target::DrawTarget::fill_rect (16,216 samples, 34.09%)</title><rect x="34.5231%" y="197" width="34.0880%" height="15" fill="rgb(224,114,35)"/><text x="34.7731%" y="207.50">libgdterm.dylib`raqote::draw_target::DrawTarget::fill_r..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (160 samples, 0.34%)</title><rect x="68.6385%" y="117" width="0.3363%" height="15" fill="rgb(245,159,27)"/><text x="68.8885%" y="127.50"></text></g><g><title>libgdterm.dylib`raqote::draw_target::DrawTarget::new (174 samples, 0.37%)</title><rect x="68.6111%" y="197" width="0.3658%" height="15" fill="rgb(245,172,44)"/><text x="68.8611%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`calloc (161 samples, 0.34%)</title><rect x="68.6385%" y="181" width="0.3384%" height="15" fill="rgb(236,23,11)"/><text x="68.8885%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_calloc (161 samples, 0.34%)</title><rect x="68.6385%" y="165" width="0.3384%" height="15" fill="rgb(205,117,38)"/><text x="68.8885%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (161 samples, 0.34%)</title><rect x="68.6385%" y="149" width="0.3384%" height="15" fill="rgb(237,72,25)"/><text x="68.8885%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`large_malloc (161 samples, 0.34%)</title><rect x="68.6385%" y="133" width="0.3384%" height="15" fill="rgb(244,70,9)"/><text x="68.8885%" y="143.50"></text></g><g><title>libgdterm.dylib`gdterm::drawer::Drawer::_draw (26,641 samples, 56.00%)</title><rect x="12.9785%" y="213" width="56.0026%" height="15" fill="rgb(217,125,39)"/><text x="13.2285%" y="223.50">libgdterm.dylib`gdterm::drawer::Drawer::_draw</text></g><g><title>Godot`NativeScriptInstance::_ml_call_reversed (26,956 samples, 56.66%)</title><rect x="12.3247%" y="293" width="56.6648%" height="15" fill="rgb(235,36,10)"/><text x="12.5747%" y="303.50">Godot`NativeScriptInstance::_ml_call_reversed</text></g><g><title>libgdterm.dylib`&lt;gdterm::drawer::Drawer as gdnative_core::class::NativeClassMethods&gt;::register::method (26,956 samples, 56.66%)</title><rect x="12.3247%" y="277" width="56.6648%" height="15" fill="rgb(251,123,47)"/><text x="12.5747%" y="287.50">libgdterm.dylib`&lt;gdterm::drawer::Drawer as gdnative_core::class::NativeClassMethods&gt;::register..</text></g><g><title>libgdterm.dylib`__rust_maybe_catch_panic (26,956 samples, 56.66%)</title><rect x="12.3247%" y="261" width="56.6648%" height="15" fill="rgb(221,13,13)"/><text x="12.5747%" y="271.50">libgdterm.dylib`__rust_maybe_catch_panic</text></g><g><title>libgdterm.dylib`std::panicking::try::do_call (26,956 samples, 56.66%)</title><rect x="12.3247%" y="245" width="56.6648%" height="15" fill="rgb(238,131,9)"/><text x="12.5747%" y="255.50">libgdterm.dylib`std::panicking::try::do_call</text></g><g><title>libgdterm.dylib`&lt;gdnative_core::user_data::LocalCellData&lt;T&gt; as gdnative_core::user_data::MapMut&gt;::map_mut (26,956 samples, 56.66%)</title><rect x="12.3247%" y="229" width="56.6648%" height="15" fill="rgb(211,50,8)"/><text x="12.5747%" y="239.50">libgdterm.dylib`&lt;gdnative_core::user_data::LocalCellData&lt;T&gt; as gdnative_core::user_data::MapMu..</text></g><g><title>Godot`NativeScriptInstance::call_multilevel_reversed (26,957 samples, 56.67%)</title><rect x="12.3247%" y="309" width="56.6669%" height="15" fill="rgb(245,182,24)"/><text x="12.5747%" y="319.50">Godot`NativeScriptInstance::call_multilevel_reversed</text></g><g><title>Godot`StringName::StringName (121 samples, 0.25%)</title><rect x="69.2565%" y="229" width="0.2544%" height="15" fill="rgb(242,14,37)"/><text x="69.5065%" y="239.50"></text></g><g><title>Godot`StringName::~StringName (150 samples, 0.32%)</title><rect x="69.5277%" y="229" width="0.3153%" height="15" fill="rgb(246,228,12)"/><text x="69.7777%" y="239.50"></text></g><g><title>Godot`StringName::unref (144 samples, 0.30%)</title><rect x="69.5403%" y="213" width="0.3027%" height="15" fill="rgb(213,55,15)"/><text x="69.7903%" y="223.50"></text></g><g><title>Godot`Theme::get_stylebox (251 samples, 0.53%)</title><rect x="69.8430%" y="229" width="0.5276%" height="15" fill="rgb(209,9,3)"/><text x="70.0930%" y="239.50"></text></g><g><title>Godot`Reference::reference (73 samples, 0.15%)</title><rect x="70.2171%" y="213" width="0.1535%" height="15" fill="rgb(230,59,30)"/><text x="70.4671%" y="223.50"></text></g><g><title>Godot`Control::get_stylebox (627 samples, 1.32%)</title><rect x="69.1682%" y="245" width="1.3180%" height="15" fill="rgb(209,121,21)"/><text x="69.4182%" y="255.50"></text></g><g><title>Godot`Theme::has_stylebox (55 samples, 0.12%)</title><rect x="70.3706%" y="229" width="0.1156%" height="15" fill="rgb(220,109,13)"/><text x="70.6206%" y="239.50"></text></g><g><title>Godot`Reference::unreference (61 samples, 0.13%)</title><rect x="70.5178%" y="245" width="0.1282%" height="15" fill="rgb(232,18,1)"/><text x="70.7678%" y="255.50"></text></g><g><title>Godot`Memory::free_static (94 samples, 0.20%)</title><rect x="70.8835%" y="229" width="0.1976%" height="15" fill="rgb(215,41,42)"/><text x="71.1335%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (223 samples, 0.47%)</title><rect x="71.6571%" y="133" width="0.4688%" height="15" fill="rgb(224,123,36)"/><text x="71.9071%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (209 samples, 0.44%)</title><rect x="71.6865%" y="117" width="0.4393%" height="15" fill="rgb(240,125,3)"/><text x="71.9365%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (250 samples, 0.53%)</title><rect x="71.6045%" y="149" width="0.5255%" height="15" fill="rgb(205,98,50)"/><text x="71.8545%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (266 samples, 0.56%)</title><rect x="71.5793%" y="165" width="0.5592%" height="15" fill="rgb(205,185,37)"/><text x="71.8293%" y="175.50"></text></g><g><title>Godot`Memory::alloc_static (399 samples, 0.84%)</title><rect x="71.3039%" y="181" width="0.8387%" height="15" fill="rgb(238,207,15)"/><text x="71.5539%" y="191.50"></text></g><g><title>Godot`String::String (501 samples, 1.05%)</title><rect x="71.0937%" y="229" width="1.0532%" height="15" fill="rgb(213,199,42)"/><text x="71.3437%" y="239.50"></text></g><g><title>Godot`String::copy_from (495 samples, 1.04%)</title><rect x="71.1063%" y="213" width="1.0405%" height="15" fill="rgb(235,201,11)"/><text x="71.3563%" y="223.50"></text></g><g><title>Godot`CowData&lt;wchar_t&gt;::resize (444 samples, 0.93%)</title><rect x="71.2136%" y="197" width="0.9333%" height="15" fill="rgb(207,46,11)"/><text x="71.4636%" y="207.50"></text></g><g><title>Godot`String::operator== (50 samples, 0.11%)</title><rect x="72.2247%" y="229" width="0.1051%" height="15" fill="rgb(241,35,35)"/><text x="72.4747%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (54 samples, 0.11%)</title><rect x="72.4118%" y="213" width="0.1135%" height="15" fill="rgb(243,32,47)"/><text x="72.6618%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (91 samples, 0.19%)</title><rect x="72.3424%" y="229" width="0.1913%" height="15" fill="rgb(247,202,23)"/><text x="72.5924%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (130 samples, 0.27%)</title><rect x="72.5337%" y="229" width="0.2733%" height="15" fill="rgb(219,102,11)"/><text x="72.7837%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (99 samples, 0.21%)</title><rect x="72.8112%" y="229" width="0.2081%" height="15" fill="rgb(243,110,44)"/><text x="73.0612%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (128 samples, 0.27%)</title><rect x="73.0193%" y="229" width="0.2691%" height="15" fill="rgb(222,74,54)"/><text x="73.2693%" y="239.50"></text></g><g><title>Godot`StringName::StringName (1,269 samples, 2.67%)</title><rect x="70.6460%" y="245" width="2.6676%" height="15" fill="rgb(216,99,12)"/><text x="70.8960%" y="255.50">Go..</text></g><g><title>Godot`StringName::~StringName (90 samples, 0.19%)</title><rect x="73.3199%" y="245" width="0.1892%" height="15" fill="rgb(226,22,26)"/><text x="73.5699%" y="255.50"></text></g><g><title>Godot`StringName::unref (72 samples, 0.15%)</title><rect x="73.3577%" y="229" width="0.1514%" height="15" fill="rgb(217,163,10)"/><text x="73.6077%" y="239.50"></text></g><g><title>Godot`RichTextLabel::_get_text_rect (2,161 samples, 4.54%)</title><rect x="69.1156%" y="261" width="4.5427%" height="15" fill="rgb(213,25,53)"/><text x="69.3656%" y="271.50">Godot..</text></g><g><title>Godot`VisualServerCanvas::canvas_item_add_texture_rect_region (70 samples, 0.15%)</title><rect x="73.9736%" y="197" width="0.1471%" height="15" fill="rgb(252,105,26)"/><text x="74.2236%" y="207.50"></text></g><g><title>Godot`operator new(unsigned long, char const*) (55 samples, 0.12%)</title><rect x="74.0052%" y="181" width="0.1156%" height="15" fill="rgb(220,39,43)"/><text x="74.2552%" y="191.50"></text></g><g><title>Godot`DynamicFontAtSize::draw_char(RID, Vector2 const&amp;, wchar_t, wchar_t, Color const&amp;, Vector&lt;Ref (127 samples, 0.27%)</title><rect x="73.8580%" y="229" width="0.2670%" height="15" fill="rgb(229,68,48)"/><text x="74.1080%" y="239.50"></text></g><g><title>Godot`VisualServerWrapMT::canvas_item_add_texture_rect_region (107 samples, 0.22%)</title><rect x="73.9001%" y="213" width="0.2249%" height="15" fill="rgb(252,8,32)"/><text x="74.1501%" y="223.50"></text></g><g><title>Godot`DynamicFont::draw_char (131 samples, 0.28%)</title><rect x="73.8538%" y="245" width="0.2754%" height="15" fill="rgb(223,20,43)"/><text x="74.1038%" y="255.50"></text></g><g><title>Godot`RichTextLabel::_process_line(RichTextLabel::ItemFrame*, Vector2 const&amp;, int&amp;, int, int, RichTextLabel::ProcessMode, Ref (264 samples, 0.55%)</title><rect x="73.6583%" y="261" width="0.5550%" height="15" fill="rgb(229,81,49)"/><text x="73.9083%" y="271.50"></text></g><g><title>Godot`RichTextLabel::_validate_line_caches (55 samples, 0.12%)</title><rect x="74.2175%" y="261" width="0.1156%" height="15" fill="rgb(236,28,36)"/><text x="74.4675%" y="271.50"></text></g><g><title>Godot`StyleBoxFlat::draw (50 samples, 0.11%)</title><rect x="74.3815%" y="261" width="0.1051%" height="15" fill="rgb(249,185,26)"/><text x="74.6315%" y="271.50"></text></g><g><title>Godot`RichTextLabel::_notification (2,601 samples, 5.47%)</title><rect x="69.0210%" y="277" width="5.4676%" height="15" fill="rgb(249,174,33)"/><text x="69.2710%" y="287.50">Godot`R..</text></g><g><title>Godot`RichTextLabel::_notificationv (2,610 samples, 5.49%)</title><rect x="69.0042%" y="293" width="5.4865%" height="15" fill="rgb(233,201,37)"/><text x="69.2542%" y="303.50">Godot`R..</text></g><g><title>Godot`Object::notification (2,632 samples, 5.53%)</title><rect x="68.9958%" y="309" width="5.5328%" height="15" fill="rgb(221,78,26)"/><text x="69.2458%" y="319.50">Godot`O..</text></g><g><title>Godot`CanvasItem::_update_callback (29,652 samples, 62.33%)</title><rect x="12.3226%" y="325" width="62.3321%" height="15" fill="rgb(250,127,30)"/><text x="12.5726%" y="335.50">Godot`CanvasItem::_update_callback</text></g><g><title>Godot`MethodBind0::call (29,661 samples, 62.35%)</title><rect x="12.3226%" y="341" width="62.3510%" height="15" fill="rgb(230,49,44)"/><text x="12.5726%" y="351.50">Godot`MethodBind0::call</text></g><g><title>Godot`Object::call (29,673 samples, 62.38%)</title><rect x="12.3016%" y="357" width="62.3762%" height="15" fill="rgb(229,67,23)"/><text x="12.5516%" y="367.50">Godot`Object::call</text></g><g><title>Godot`MessageQueue::_call_function (29,675 samples, 62.38%)</title><rect x="12.3016%" y="373" width="62.3804%" height="15" fill="rgb(249,83,47)"/><text x="12.5516%" y="383.50">Godot`MessageQueue::_call_function</text></g><g><title>Godot`MessageQueue::flush (29,679 samples, 62.39%)</title><rect x="12.3016%" y="389" width="62.3889%" height="15" fill="rgb(215,43,3)"/><text x="12.5516%" y="399.50">Godot`MessageQueue::flush</text></g><g><title>libgdterm.dylib`&lt;alacritty_terminal::term::RenderableCellsIter&lt;C&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.11%)</title><rect x="74.9974%" y="213" width="0.1093%" height="15" fill="rgb(238,154,13)"/><text x="75.2474%" y="223.50"></text></g><g><title>libgdterm.dylib`gdterm::pty_driver::PtyDriver::renderable_cells (82 samples, 0.17%)</title><rect x="74.9721%" y="245" width="0.1724%" height="15" fill="rgb(219,56,2)"/><text x="75.2221%" y="255.50"></text></g><g><title>libgdterm.dylib`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (78 samples, 0.16%)</title><rect x="74.9806%" y="229" width="0.1640%" height="15" fill="rgb(233,0,4)"/><text x="75.2306%" y="239.50"></text></g><g><title>libgdterm.dylib`gdterm::term::Term::_process (104 samples, 0.22%)</title><rect x="74.9322%" y="261" width="0.2186%" height="15" fill="rgb(235,30,7)"/><text x="75.1822%" y="271.50"></text></g><g><title>libgdterm.dylib`&lt;gdnative_core::user_data::LocalCellData&lt;T&gt; as gdnative_core::user_data::MapMut&gt;::map_mut (107 samples, 0.22%)</title><rect x="74.9301%" y="277" width="0.2249%" height="15" fill="rgb(250,79,13)"/><text x="75.1801%" y="287.50"></text></g><g><title>libgdterm.dylib`__rust_maybe_catch_panic (109 samples, 0.23%)</title><rect x="74.9301%" y="309" width="0.2291%" height="15" fill="rgb(211,146,34)"/><text x="75.1801%" y="319.50"></text></g><g><title>libgdterm.dylib`std::panicking::try::do_call (109 samples, 0.23%)</title><rect x="74.9301%" y="293" width="0.2291%" height="15" fill="rgb(228,22,38)"/><text x="75.1801%" y="303.50"></text></g><g><title>Godot`NativeScriptInstance::call_multilevel (124 samples, 0.26%)</title><rect x="74.9007%" y="341" width="0.2607%" height="15" fill="rgb(235,168,5)"/><text x="75.1507%" y="351.50"></text></g><g><title>libgdterm.dylib`&lt;gdterm::term::Term as gdnative_core::class::NativeClassMethods&gt;::register::method (114 samples, 0.24%)</title><rect x="74.9217%" y="325" width="0.2396%" height="15" fill="rgb(221,155,16)"/><text x="75.1717%" y="335.50"></text></g><g><title>Godot`Node::_notification (125 samples, 0.26%)</title><rect x="74.9007%" y="357" width="0.2628%" height="15" fill="rgb(215,215,53)"/><text x="75.1507%" y="367.50"></text></g><g><title>Godot`Object::notification (211 samples, 0.44%)</title><rect x="74.7472%" y="373" width="0.4435%" height="15" fill="rgb(223,4,10)"/><text x="74.9972%" y="383.50"></text></g><g><title>Godot`SceneTree::_notify_group_pause (228 samples, 0.48%)</title><rect x="74.7178%" y="389" width="0.4793%" height="15" fill="rgb(234,103,6)"/><text x="74.9678%" y="399.50"></text></g><g><title>Godot`SceneTree::idle (29,965 samples, 62.99%)</title><rect x="12.2890%" y="405" width="62.9901%" height="15" fill="rgb(227,97,0)"/><text x="12.5390%" y="415.50">Godot`SceneTree::idle</text></g><g><title>Godot`Control::get_stylebox (99 samples, 0.21%)</title><rect x="75.3295%" y="245" width="0.2081%" height="15" fill="rgb(234,150,53)"/><text x="75.5795%" y="255.50"></text></g><g><title>Godot`Memory::alloc_static (63 samples, 0.13%)</title><rect x="75.6743%" y="181" width="0.1324%" height="15" fill="rgb(228,201,54)"/><text x="75.9243%" y="191.50"></text></g><g><title>Godot`String::String (72 samples, 0.15%)</title><rect x="75.6574%" y="229" width="0.1514%" height="15" fill="rgb(222,22,37)"/><text x="75.9074%" y="239.50"></text></g><g><title>Godot`String::copy_from (71 samples, 0.15%)</title><rect x="75.6595%" y="213" width="0.1493%" height="15" fill="rgb(237,53,32)"/><text x="75.9095%" y="223.50"></text></g><g><title>Godot`CowData&lt;wchar_t&gt;::resize (68 samples, 0.14%)</title><rect x="75.6658%" y="197" width="0.1429%" height="15" fill="rgb(233,25,53)"/><text x="75.9158%" y="207.50"></text></g><g><title>Godot`StringName::StringName (208 samples, 0.44%)</title><rect x="75.5691%" y="245" width="0.4372%" height="15" fill="rgb(210,40,34)"/><text x="75.8191%" y="255.50"></text></g><g><title>Godot`RichTextLabel::_get_text_rect (350 samples, 0.74%)</title><rect x="75.3253%" y="261" width="0.7357%" height="15" fill="rgb(241,220,44)"/><text x="75.5753%" y="271.50"></text></g><g><title>Godot`RichTextLabel::_notificationv (433 samples, 0.91%)</title><rect x="75.3043%" y="293" width="0.9102%" height="15" fill="rgb(235,28,35)"/><text x="75.5543%" y="303.50"></text></g><g><title>Godot`RichTextLabel::_notification (429 samples, 0.90%)</title><rect x="75.3127%" y="277" width="0.9018%" height="15" fill="rgb(210,56,17)"/><text x="75.5627%" y="287.50"></text></g><g><title>Godot`Object::notification (446 samples, 0.94%)</title><rect x="75.2896%" y="309" width="0.9375%" height="15" fill="rgb(224,130,29)"/><text x="75.5396%" y="319.50"></text></g><g><title>Godot`MethodBind0::call (459 samples, 0.96%)</title><rect x="75.2833%" y="341" width="0.9649%" height="15" fill="rgb(235,212,8)"/><text x="75.5333%" y="351.50"></text></g><g><title>Godot`CanvasItem::_update_callback (459 samples, 0.96%)</title><rect x="75.2833%" y="325" width="0.9649%" height="15" fill="rgb(223,33,50)"/><text x="75.5333%" y="335.50"></text></g><g><title>Godot`MessageQueue::_call_function (463 samples, 0.97%)</title><rect x="75.2812%" y="373" width="0.9733%" height="15" fill="rgb(219,149,13)"/><text x="75.5312%" y="383.50"></text></g><g><title>Godot`Object::call (463 samples, 0.97%)</title><rect x="75.2812%" y="357" width="0.9733%" height="15" fill="rgb(250,156,29)"/><text x="75.5312%" y="367.50"></text></g><g><title>Godot`MessageQueue::flush (467 samples, 0.98%)</title><rect x="75.2791%" y="389" width="0.9817%" height="15" fill="rgb(216,193,19)"/><text x="75.5291%" y="399.50"></text></g><g><title>Godot`SceneTree::iteration (492 samples, 1.03%)</title><rect x="75.2791%" y="405" width="1.0342%" height="15" fill="rgb(216,135,14)"/><text x="75.5291%" y="415.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (74 samples, 0.16%)</title><rect x="76.3932%" y="229" width="0.1556%" height="15" fill="rgb(241,47,5)"/><text x="76.6432%" y="239.50"></text></g><g><title>IOKit`IOConnectCallMethod (74 samples, 0.16%)</title><rect x="76.3932%" y="213" width="0.1556%" height="15" fill="rgb(233,42,35)"/><text x="76.6432%" y="223.50"></text></g><g><title>IOKit`io_connect_method (74 samples, 0.16%)</title><rect x="76.3932%" y="197" width="0.1556%" height="15" fill="rgb(231,13,6)"/><text x="76.6432%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (74 samples, 0.16%)</title><rect x="76.3932%" y="181" width="0.1556%" height="15" fill="rgb(207,181,40)"/><text x="76.6432%" y="191.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`intelSubmitCommands (86 samples, 0.18%)</title><rect x="76.3806%" y="293" width="0.1808%" height="15" fill="rgb(254,173,49)"/><text x="76.6306%" y="303.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`IntelCommandBuffer::getNew (86 samples, 0.18%)</title><rect x="76.3806%" y="277" width="0.1808%" height="15" fill="rgb(221,1,38)"/><text x="76.6306%" y="287.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (86 samples, 0.18%)</title><rect x="76.3806%" y="261" width="0.1808%" height="15" fill="rgb(206,124,46)"/><text x="76.6306%" y="271.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (86 samples, 0.18%)</title><rect x="76.3806%" y="245" width="0.1808%" height="15" fill="rgb(249,21,11)"/><text x="76.6306%" y="255.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (178 samples, 0.37%)</title><rect x="76.3722%" y="309" width="0.3742%" height="15" fill="rgb(222,201,40)"/><text x="76.6222%" y="319.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (50 samples, 0.11%)</title><rect x="76.8178%" y="309" width="0.1051%" height="15" fill="rgb(235,61,29)"/><text x="77.0678%" y="319.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (350 samples, 0.74%)</title><rect x="76.3616%" y="325" width="0.7357%" height="15" fill="rgb(219,207,3)"/><text x="76.6116%" y="335.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (381 samples, 0.80%)</title><rect x="76.3427%" y="341" width="0.8009%" height="15" fill="rgb(222,56,46)"/><text x="76.5927%" y="351.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`gldPresentFramebufferData (79 samples, 0.17%)</title><rect x="77.1436%" y="341" width="0.1661%" height="15" fill="rgb(239,76,54)"/><text x="77.3936%" y="351.50"></text></g><g><title>GLEngine`glSwap_Exec (467 samples, 0.98%)</title><rect x="76.3427%" y="357" width="0.9817%" height="15" fill="rgb(231,124,27)"/><text x="76.5927%" y="367.50"></text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (473 samples, 0.99%)</title><rect x="76.3343%" y="389" width="0.9943%" height="15" fill="rgb(249,195,6)"/><text x="76.5843%" y="399.50"></text></g><g><title>OpenGL`CGLFlushDrawable (472 samples, 0.99%)</title><rect x="76.3364%" y="373" width="0.9922%" height="15" fill="rgb(237,174,47)"/><text x="76.5864%" y="383.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`glrWriteBufferData (101 samples, 0.21%)</title><rect x="78.2031%" y="309" width="0.2123%" height="15" fill="rgb(206,201,31)"/><text x="78.4531%" y="319.50"></text></g><g><title>GLEngine`glBufferSubData_Exec (120 samples, 0.25%)</title><rect x="78.1905%" y="325" width="0.2523%" height="15" fill="rgb(231,57,52)"/><text x="78.4405%" y="335.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`updateVSConstantState(GenContext*, unsigned long long) (54 samples, 0.11%)</title><rect x="78.7539%" y="277" width="0.1135%" height="15" fill="rgb(248,177,22)"/><text x="79.0039%" y="287.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`GenContext::ProgramPipeline (200 samples, 0.42%)</title><rect x="78.5205%" y="293" width="0.4204%" height="15" fill="rgb(215,211,37)"/><text x="78.7705%" y="303.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`IntelVertexState::submitVboBuffers (65 samples, 0.14%)</title><rect x="78.9431%" y="293" width="0.1366%" height="15" fill="rgb(241,128,51)"/><text x="79.1931%" y="303.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`glrIntelRenderVertexArray (289 samples, 0.61%)</title><rect x="78.4911%" y="309" width="0.6075%" height="15" fill="rgb(227,165,31)"/><text x="78.7411%" y="319.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`updateDispatch (154 samples, 0.32%)</title><rect x="79.1491%" y="293" width="0.3237%" height="15" fill="rgb(228,167,24)"/><text x="79.3991%" y="303.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (223 samples, 0.47%)</title><rect x="79.0986%" y="309" width="0.4688%" height="15" fill="rgb(228,143,12)"/><text x="79.3486%" y="319.50"></text></g><g><title>GLEngine`glDrawArrays_ACC_GL3Exec (544 samples, 1.14%)</title><rect x="78.4427%" y="325" width="1.1436%" height="15" fill="rgb(249,149,8)"/><text x="78.6927%" y="335.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`GenContext::ProgramPipeline (134 samples, 0.28%)</title><rect x="79.6136%" y="293" width="0.2817%" height="15" fill="rgb(243,35,44)"/><text x="79.8636%" y="303.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`glrIntelRenderVertexArray (159 samples, 0.33%)</title><rect x="79.6010%" y="309" width="0.3342%" height="15" fill="rgb(246,89,9)"/><text x="79.8510%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (866 samples, 1.82%)</title><rect x="80.2905%" y="149" width="1.8204%" height="15" fill="rgb(233,213,13)"/><text x="80.5405%" y="159.50">l..</text></g><g><title>IOKit`io_connect_method (880 samples, 1.85%)</title><rect x="80.2716%" y="165" width="1.8499%" height="15" fill="rgb(233,141,41)"/><text x="80.5216%" y="175.50">I..</text></g><g><title>IOKit`IOConnectCallStructMethod (896 samples, 1.88%)</title><rect x="80.2632%" y="197" width="1.8835%" height="15" fill="rgb(239,167,4)"/><text x="80.5132%" y="207.50">I..</text></g><g><title>IOKit`IOConnectCallMethod (895 samples, 1.88%)</title><rect x="80.2653%" y="181" width="1.8814%" height="15" fill="rgb(209,217,16)"/><text x="80.5153%" y="191.50">I..</text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (959 samples, 2.02%)</title><rect x="80.1644%" y="213" width="2.0159%" height="15" fill="rgb(219,88,35)"/><text x="80.4144%" y="223.50">I..</text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (963 samples, 2.02%)</title><rect x="80.1581%" y="229" width="2.0243%" height="15" fill="rgb(220,193,23)"/><text x="80.4081%" y="239.50">l..</text></g><g><title>AppleIntelBDWGraphicsGLDriver`IntelCommandBuffer::getNew (977 samples, 2.05%)</title><rect x="80.1392%" y="245" width="2.0538%" height="15" fill="rgb(230,90,52)"/><text x="80.3892%" y="255.50">A..</text></g><g><title>AppleIntelBDWGraphicsGLDriver`intelSubmitCommands (979 samples, 2.06%)</title><rect x="80.1371%" y="261" width="2.0580%" height="15" fill="rgb(252,106,19)"/><text x="80.3871%" y="271.50">A..</text></g><g><title>AppleIntelBDWGraphicsGLDriver`updateDispatch (1,113 samples, 2.34%)</title><rect x="79.9752%" y="277" width="2.3397%" height="15" fill="rgb(206,74,20)"/><text x="80.2252%" y="287.50">A..</text></g><g><title>GLEngine`gleUpdateDeferredStateFull (62 samples, 0.13%)</title><rect x="82.3401%" y="277" width="0.1303%" height="15" fill="rgb(230,138,44)"/><text x="82.5901%" y="287.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (1,206 samples, 2.54%)</title><rect x="79.9500%" y="293" width="2.5352%" height="15" fill="rgb(235,182,43)"/><text x="80.2000%" y="303.50">GL..</text></g><g><title>GLEngine`glDrawArrays_GL3Exec (1,381 samples, 2.90%)</title><rect x="79.5863%" y="325" width="2.9030%" height="15" fill="rgb(242,16,51)"/><text x="79.8363%" y="335.50">GL..</text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (1,213 samples, 2.55%)</title><rect x="79.9395%" y="309" width="2.5499%" height="15" fill="rgb(248,9,4)"/><text x="80.1895%" y="319.50">GL..</text></g><g><title>AppleIntelBDWGraphicsGLDriver`GenContext::ProgramPipeline (122 samples, 0.26%)</title><rect x="82.5251%" y="293" width="0.2565%" height="15" fill="rgb(210,31,22)"/><text x="82.7751%" y="303.50"></text></g><g><title>AppleIntelBDWGraphicsGLDriver`glrIntelRenderVertexArray (152 samples, 0.32%)</title><rect x="82.5061%" y="309" width="0.3195%" height="15" fill="rgb(239,54,39)"/><text x="82.7561%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1,763 samples, 3.71%)</title><rect x="83.1284%" y="149" width="3.7060%" height="15" fill="rgb(230,99,41)"/><text x="83.3784%" y="159.50">libs..</text></g><g><title>IOKit`io_connect_method (1,779 samples, 3.74%)</title><rect x="83.1095%" y="165" width="3.7397%" height="15" fill="rgb(253,106,12)"/><text x="83.3595%" y="175.50">IOKi..</text></g><g><title>IOKit`IOConnectCallStructMethod (1,792 samples, 3.77%)</title><rect x="83.1053%" y="197" width="3.7670%" height="15" fill="rgb(213,46,41)"/><text x="83.3553%" y="207.50">IOKi..</text></g><g><title>IOKit`IOConnectCallMethod (1,792 samples, 3.77%)</title><rect x="83.1053%" y="181" width="3.7670%" height="15" fill="rgb(215,133,35)"/><text x="83.3553%" y="191.50">IOKi..</text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (1,887 samples, 3.97%)</title><rect x="82.9665%" y="213" width="3.9667%" height="15" fill="rgb(213,28,5)"/><text x="83.2165%" y="223.50">IOAc..</text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (1,899 samples, 3.99%)</title><rect x="82.9518%" y="229" width="3.9919%" height="15" fill="rgb(215,77,49)"/><text x="83.2018%" y="239.50">libG..</text></g><g><title>AppleIntelBDWGraphicsGLDriver`IntelCommandBuffer::getNew (1,911 samples, 4.02%)</title><rect x="82.9350%" y="245" width="4.0172%" height="15" fill="rgb(248,100,22)"/><text x="83.1850%" y="255.50">Appl..</text></g><g><title>AppleIntelBDWGraphicsGLDriver`intelSubmitCommands (1,916 samples, 4.03%)</title><rect x="82.9308%" y="261" width="4.0277%" height="15" fill="rgb(208,67,9)"/><text x="83.1808%" y="271.50">Appl..</text></g><g><title>AppleIntelBDWGraphicsGLDriver`updateDispatch (1,983 samples, 4.17%)</title><rect x="82.8551%" y="277" width="4.1685%" height="15" fill="rgb(219,133,21)"/><text x="83.1051%" y="287.50">Apple..</text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (2,054 samples, 4.32%)</title><rect x="82.8341%" y="293" width="4.3178%" height="15" fill="rgb(246,46,29)"/><text x="83.0841%" y="303.50">GLEng..</text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (2,061 samples, 4.33%)</title><rect x="82.8257%" y="309" width="4.3325%" height="15" fill="rgb(246,185,52)"/><text x="83.0757%" y="319.50">GLEng..</text></g><g><title>GLEngine`glDrawElements_GL3Exec (2,222 samples, 4.67%)</title><rect x="82.4893%" y="325" width="4.6709%" height="15" fill="rgb(252,136,11)"/><text x="82.7393%" y="335.50">GLEng..</text></g><g><title>GLEngine`glUniform1i_Exec (123 samples, 0.26%)</title><rect x="87.1666%" y="325" width="0.2586%" height="15" fill="rgb(219,138,53)"/><text x="87.4166%" y="335.50"></text></g><g><title>GLEngine`setUniform (121 samples, 0.25%)</title><rect x="87.1708%" y="309" width="0.2544%" height="15" fill="rgb(211,51,23)"/><text x="87.4208%" y="319.50"></text></g><g><title>GLEngine`setProgramUniformInner (116 samples, 0.24%)</title><rect x="87.1813%" y="293" width="0.2438%" height="15" fill="rgb(247,221,28)"/><text x="87.4313%" y="303.50"></text></g><g><title>GLEngine`setProgramUniformInner (78 samples, 0.16%)</title><rect x="87.4608%" y="309" width="0.1640%" height="15" fill="rgb(251,222,45)"/><text x="87.7108%" y="319.50"></text></g><g><title>GLEngine`setUniform (91 samples, 0.19%)</title><rect x="87.4440%" y="325" width="0.1913%" height="15" fill="rgb(217,162,53)"/><text x="87.6940%" y="335.50"></text></g><g><title>GLEngine`glUseProgramObjectARB_Exec (71 samples, 0.15%)</title><rect x="87.6374%" y="309" width="0.1493%" height="15" fill="rgb(229,93,14)"/><text x="87.8874%" y="319.50"></text></g><g><title>GLEngine`gleUseProgramObject (61 samples, 0.13%)</title><rect x="87.6584%" y="293" width="0.1282%" height="15" fill="rgb(209,67,49)"/><text x="87.9084%" y="303.50"></text></g><g><title>Godot`ShaderGLES3::bind (79 samples, 0.17%)</title><rect x="87.6353%" y="325" width="0.1661%" height="15" fill="rgb(213,87,29)"/><text x="87.8853%" y="335.50"></text></g><g><title>Godot`RasterizerCanvasGLES3::canvas_render_items (4,888 samples, 10.28%)</title><rect x="77.5578%" y="341" width="10.2752%" height="15" fill="rgb(205,151,52)"/><text x="77.8078%" y="351.50">Godot`Rasterize..</text></g><g><title>Godot`VisualServerCanvas::_render_canvas_item (73 samples, 0.15%)</title><rect x="87.8329%" y="341" width="0.1535%" height="15" fill="rgb(253,215,39)"/><text x="88.0829%" y="351.50"></text></g><g><title>Godot`VisualServerCanvas::render_canvas (5,031 samples, 10.58%)</title><rect x="77.4548%" y="357" width="10.5758%" height="15" fill="rgb(221,220,41)"/><text x="77.7048%" y="367.50">Godot`VisualSer..</text></g><g><title>Godot`VisualServerViewport::_draw_viewport (5,037 samples, 10.59%)</title><rect x="77.4442%" y="373" width="10.5884%" height="15" fill="rgb(218,133,21)"/><text x="77.6942%" y="383.50">Godot`VisualSer..</text></g><g><title>Godot`VisualServerViewport::draw_viewports (5,055 samples, 10.63%)</title><rect x="77.4085%" y="389" width="10.6262%" height="15" fill="rgb(221,193,43)"/><text x="77.6585%" y="399.50">Godot`VisualServ..</text></g><g><title>Godot`VisualServerRaster::draw (5,568 samples, 11.70%)</title><rect x="76.3322%" y="405" width="11.7046%" height="15" fill="rgb(240,128,52)"/><text x="76.5822%" y="415.50">Godot`VisualServe..</text></g><g><title>Godot`Main::iteration (41,230 samples, 86.67%)</title><rect x="1.3706%" y="421" width="86.6705%" height="15" fill="rgb(253,114,12)"/><text x="1.6206%" y="431.50">Godot`Main::iteration</text></g><g><title>Godot`OS_OSX::run (41,918 samples, 88.12%)</title><rect x="0.0420%" y="437" width="88.1167%" height="15" fill="rgb(215,223,47)"/><text x="0.2920%" y="447.50">Godot`OS_OSX::run</text></g><g><title>Godot`0x4 (41,955 samples, 88.19%)</title><rect x="0.0000%" y="485" width="88.1945%" height="15" fill="rgb(248,225,23)"/><text x="0.2500%" y="495.50">Godot`0x4</text></g><g><title>libdyld.dylib`start (41,955 samples, 88.19%)</title><rect x="0.0000%" y="469" width="88.1945%" height="15" fill="rgb(250,108,0)"/><text x="0.2500%" y="479.50">libdyld.dylib`start</text></g><g><title>Godot`main (41,955 samples, 88.19%)</title><rect x="0.0000%" y="453" width="88.1945%" height="15" fill="rgb(228,208,7)"/><text x="0.2500%" y="463.50">Godot`main</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (55 samples, 0.12%)</title><rect x="88.4573%" y="277" width="0.1156%" height="15" fill="rgb(244,45,10)"/><text x="88.7073%" y="287.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (103 samples, 0.22%)</title><rect x="88.3627%" y="293" width="0.2165%" height="15" fill="rgb(207,125,25)"/><text x="88.6127%" y="303.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (134 samples, 0.28%)</title><rect x="88.3038%" y="309" width="0.2817%" height="15" fill="rgb(210,195,18)"/><text x="88.5538%" y="319.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (141 samples, 0.30%)</title><rect x="88.2954%" y="325" width="0.2964%" height="15" fill="rgb(249,80,12)"/><text x="88.5454%" y="335.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (160 samples, 0.34%)</title><rect x="88.2576%" y="389" width="0.3363%" height="15" fill="rgb(221,65,9)"/><text x="88.5076%" y="399.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (160 samples, 0.34%)</title><rect x="88.2576%" y="373" width="0.3363%" height="15" fill="rgb(235,49,36)"/><text x="88.5076%" y="383.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (157 samples, 0.33%)</title><rect x="88.2639%" y="357" width="0.3300%" height="15" fill="rgb(225,32,20)"/><text x="88.5139%" y="367.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (157 samples, 0.33%)</title><rect x="88.2639%" y="341" width="0.3300%" height="15" fill="rgb(215,141,46)"/><text x="88.5139%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (161 samples, 0.34%)</title><rect x="88.2576%" y="405" width="0.3384%" height="15" fill="rgb(250,160,47)"/><text x="88.5076%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (213 samples, 0.45%)</title><rect x="88.2428%" y="421" width="0.4478%" height="15" fill="rgb(216,222,40)"/><text x="88.4928%" y="431.50"></text></g><g><title>AppKit`_NSEventThread (217 samples, 0.46%)</title><rect x="88.2386%" y="453" width="0.4562%" height="15" fill="rgb(234,217,39)"/><text x="88.4886%" y="463.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (216 samples, 0.45%)</title><rect x="88.2407%" y="437" width="0.4541%" height="15" fill="rgb(207,178,40)"/><text x="88.4907%" y="447.50"></text></g><g><title>Godot`AudioDriverCoreAudio::output_callback (79 samples, 0.17%)</title><rect x="88.9176%" y="213" width="0.1661%" height="15" fill="rgb(221,136,13)"/><text x="89.1676%" y="223.50"></text></g><g><title>CoreAudio`0x000000010d020d40 (91 samples, 0.19%)</title><rect x="88.9092%" y="229" width="0.1913%" height="15" fill="rgb(249,199,10)"/><text x="89.1592%" y="239.50"></text></g><g><title>CoreAudio`0x000000010cfe58ee (95 samples, 0.20%)</title><rect x="88.9071%" y="245" width="0.1997%" height="15" fill="rgb(249,222,13)"/><text x="89.1571%" y="255.50"></text></g><g><title>AudioToolboxCore`AudioConverterChain::CallInputProc (98 samples, 0.21%)</title><rect x="88.9071%" y="261" width="0.2060%" height="15" fill="rgb(244,185,38)"/><text x="89.1571%" y="271.50"></text></g><g><title>AudioToolboxCore`BufferedAudioConverter::GetInputBytes (109 samples, 0.23%)</title><rect x="88.8924%" y="293" width="0.2291%" height="15" fill="rgb(236,202,9)"/><text x="89.1424%" y="303.50"></text></g><g><title>AudioToolboxCore`AudioConverterChain::FillBufferFromInputProc (107 samples, 0.22%)</title><rect x="88.8966%" y="277" width="0.2249%" height="15" fill="rgb(250,229,37)"/><text x="89.1466%" y="287.50"></text></g><g><title>AudioToolboxCore`CBRConverter::RenderOutput (128 samples, 0.27%)</title><rect x="88.8882%" y="309" width="0.2691%" height="15" fill="rgb(206,174,23)"/><text x="89.1382%" y="319.50"></text></g><g><title>AudioToolboxCore`BufferedAudioConverter::FillBuffer (136 samples, 0.29%)</title><rect x="88.8798%" y="325" width="0.2859%" height="15" fill="rgb(211,33,43)"/><text x="89.1298%" y="335.50"></text></g><g><title>AudioToolboxCore`AudioConverterChain::RenderOutput (139 samples, 0.29%)</title><rect x="88.8777%" y="341" width="0.2922%" height="15" fill="rgb(245,58,50)"/><text x="89.1277%" y="351.50"></text></g><g><title>AudioToolboxCore`BufferedAudioConverter::FillBuffer (148 samples, 0.31%)</title><rect x="88.8714%" y="357" width="0.3111%" height="15" fill="rgb(244,68,36)"/><text x="89.1214%" y="367.50"></text></g><g><title>AudioToolboxCore`AudioConverterFillComplexBuffer (184 samples, 0.39%)</title><rect x="88.8504%" y="373" width="0.3868%" height="15" fill="rgb(232,229,15)"/><text x="89.1004%" y="383.50"></text></g><g><title>CoreAudio`0x000000010cfe49d2 (198 samples, 0.42%)</title><rect x="88.8461%" y="389" width="0.4162%" height="15" fill="rgb(254,30,23)"/><text x="89.0961%" y="399.50"></text></g><g><title>CoreAudio`0x000000010d006662 (226 samples, 0.48%)</title><rect x="88.8104%" y="405" width="0.4751%" height="15" fill="rgb(235,160,14)"/><text x="89.0604%" y="415.50"></text></g><g><title>CoreAudio`0x000000010cfe7624 (260 samples, 0.55%)</title><rect x="88.7747%" y="421" width="0.5466%" height="15" fill="rgb(212,155,44)"/><text x="89.0247%" y="431.50"></text></g><g><title>CoreAudio`HALB_MachPort::SendSimpleMessageWithSimpleReply (177 samples, 0.37%)</title><rect x="89.3317%" y="421" width="0.3721%" height="15" fill="rgb(226,2,50)"/><text x="89.5817%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (167 samples, 0.35%)</title><rect x="89.3528%" y="405" width="0.3511%" height="15" fill="rgb(234,177,6)"/><text x="89.6028%" y="415.50"></text></g><g><title>CoreAudio`invocation function for block in HALC_ProxyIOContext::HALC_ProxyIOContext (499 samples, 1.05%)</title><rect x="88.7053%" y="437" width="1.0490%" height="15" fill="rgb(217,24,9)"/><text x="88.9553%" y="447.50"></text></g><g><title>CoreAudio`HALB_IOThread::Entry (505 samples, 1.06%)</title><rect x="88.6948%" y="453" width="1.0616%" height="15" fill="rgb(220,13,46)"/><text x="88.9448%" y="463.50"></text></g><g><title>Godot`OS_Unix::delay_usec (56 samples, 0.12%)</title><rect x="89.7837%" y="421" width="0.1177%" height="15" fill="rgb(239,221,27)"/><text x="90.0337%" y="431.50"></text></g><g><title>Godot`EditorExportPlatformAndroid::_device_poll_thread (68 samples, 0.14%)</title><rect x="89.7795%" y="437" width="0.1429%" height="15" fill="rgb(222,198,25)"/><text x="90.0295%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (1,448 samples, 3.04%)</title><rect x="90.5825%" y="389" width="3.0439%" height="15" fill="rgb(211,99,13)"/><text x="90.8325%" y="399.50">lib..</text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1,434 samples, 3.01%)</title><rect x="90.6119%" y="373" width="3.0144%" height="15" fill="rgb(232,111,31)"/><text x="90.8619%" y="383.50">lib..</text></g><g><title>libsystem_c.dylib`nanosleep (1,611 samples, 3.39%)</title><rect x="90.3576%" y="405" width="3.3865%" height="15" fill="rgb(245,82,37)"/><text x="90.6076%" y="415.50">lib..</text></g><g><title>libsystem_kernel.dylib`__semwait_signal (2,536 samples, 5.33%)</title><rect x="93.7987%" y="405" width="5.3310%" height="15" fill="rgb(227,149,46)"/><text x="94.0487%" y="415.50">libsyst..</text></g><g><title>Godot`OS_Unix::delay_usec (4,319 samples, 9.08%)</title><rect x="90.2377%" y="421" width="9.0791%" height="15" fill="rgb(218,36,50)"/><text x="90.4877%" y="431.50">Godot`OS_Unix..</text></g><g><title>Godot`EditorExportPlatformJavaScript::_server_thread_poll (4,523 samples, 9.51%)</title><rect x="89.9224%" y="437" width="9.5079%" height="15" fill="rgb(226,80,48)"/><text x="90.1724%" y="447.50">Godot`EditorEx..</text></g><g><title>Godot`OS_Unix::delay_usec (66 samples, 0.14%)</title><rect x="99.4387%" y="421" width="0.1387%" height="15" fill="rgb(238,224,15)"/><text x="99.6887%" y="431.50"></text></g><g><title>Godot`EditorFileServer::_thread_start (71 samples, 0.15%)</title><rect x="99.4303%" y="437" width="0.1493%" height="15" fill="rgb(241,136,10)"/><text x="99.6803%" y="447.50"></text></g><g><title>Godot`ThreadPosix::thread_callback (4,821 samples, 10.13%)</title><rect x="89.7564%" y="453" width="10.1343%" height="15" fill="rgb(208,32,45)"/><text x="90.0064%" y="463.50">Godot`ThreadPos..</text></g><g><title>libgdterm.dylib`std::sys_common::backtrace::__rust_begin_short_backtrace (49 samples, 0.10%)</title><rect x="99.8928%" y="373" width="0.1030%" height="15" fill="rgb(207,135,9)"/><text x="100.1428%" y="383.50"></text></g><g><title>libgdterm.dylib`std::sys::unix::thread::Thread::new::thread_start (51 samples, 0.11%)</title><rect x="99.8907%" y="453" width="0.1072%" height="15" fill="rgb(206,86,44)"/><text x="100.1407%" y="463.50"></text></g><g><title>libgdterm.dylib`&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (51 samples, 0.11%)</title><rect x="99.8907%" y="437" width="0.1072%" height="15" fill="rgb(245,177,15)"/><text x="100.1407%" y="447.50"></text></g><g><title>libgdterm.dylib`core::ops::function::FnOnce::call_once{{vtable.shim}} (51 samples, 0.11%)</title><rect x="99.8907%" y="421" width="0.1072%" height="15" fill="rgb(206,64,50)"/><text x="100.1407%" y="431.50"></text></g><g><title>libgdterm.dylib`__rust_maybe_catch_panic (51 samples, 0.11%)</title><rect x="99.8907%" y="405" width="0.1072%" height="15" fill="rgb(234,36,40)"/><text x="100.1407%" y="415.50"></text></g><g><title>libgdterm.dylib`std::panicking::try::do_call (51 samples, 0.11%)</title><rect x="99.8907%" y="389" width="0.1072%" height="15" fill="rgb(213,64,8)"/><text x="100.1407%" y="399.50"></text></g><g><title>all (47,571 samples, 100%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(210,75,36)"/><text x="0.2500%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (5,595 samples, 11.76%)</title><rect x="88.2386%" y="485" width="11.7614%" height="15" fill="rgb(229,88,21)"/><text x="88.4886%" y="495.50">libsystem_pthread..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (5,595 samples, 11.76%)</title><rect x="88.2386%" y="469" width="11.7614%" height="15" fill="rgb(252,204,47)"/><text x="88.4886%" y="479.50">libsystem_pthread..</text></g></svg></svg>